<html>
  <head>
    <title>SketchCam</title>
    <style>
    body {
      background-color: black;
      color: white;
      font-family: sans-serif;
    }
    </style>
  </head>
  <body>
    <h1>SketchCam</h1>
    <video id="video" width="640" height="480"></video>
    <canvas id="canvas" width="640" height="480"></canvas>
    <script>
const WIDTH = 640,
      HEIGHT = 480;

function onTick(context, video) {
    context.drawImage(video, 0, 0, WIDTH, HEIGHT);
    let frame = context.getImageData(0, 0, WIDTH, HEIGHT);
	const PIXEL = 16;
    for (var x = 0; x < WIDTH / PIXEL; x++) {
        for (var y = 0; y < HEIGHT / PIXEL; y++) {
			var pix = 0;
			for (var xx = x * PIXEL; xx < x * PIXEL + PIXEL; xx++) {
				for (var yy = y * PIXEL; yy < y * PIXEL + PIXEL; yy++) {
					var i = (xx + yy * WIDTH) * 4;
					var r = frame.data[i + 0];
					var g = frame.data[i + 1];
					var b = frame.data[i + 2];
					var gray = 0.3 * r + 0.59 * g + 0.11 * b;
					pix += gray;
				}
			}
			const BUCKET = 256 / (PIXEL / 2);
			pix /= (PIXEL * PIXEL);
			p = Math.round(pix / BUCKET) * BUCKET;

			// grayscale
			// context.fillStyle = 'rgb(' + p + ',' + p + ',' + p + ')';
			// context.fillRect(x * PIXEL, y * PIXEL, PIXEL, PIXEL);

			// solid rects
			context.fillStyle = 'rgb(255,255,255)';
			context.fillRect(x * PIXEL, y * PIXEL, PIXEL, PIXEL);
			context.fillStyle = 'rgb(0,0,0)';
			var height = (255 - p) / BUCKET * 2 + 1;
			context.fillRect(x * PIXEL, y * PIXEL + (PIXEL / 2) - height, PIXEL, height);
        }
    }
    // context.putImageData(frame, 0, 0);
    setTimeout(function () { onTick(context, video); }, 50);
}

window.addEventListener("DOMContentLoaded", function() {
    // Grab elements, create settings, etc.
    var canvas = document.getElementById("canvas"),
        context = canvas.getContext("2d"),
        video = document.getElementById("video"),
        videoObj = { "video": true },
        errBack = function(error) {
            Alert("Video capture error: ", error.code); 
        };

    // Put video listeners into place
    if(navigator.getUserMedia) { // Standard
        navigator.getUserMedia(videoObj, function(stream) {
            video.src = window.URL ? window.URL.createObjectURL(stream) : stream;
            video.play();
            setTimeout(function () { onTick(context, video); }, 0);
        }, errBack);
    } else if(navigator.webkitGetUserMedia) { // WebKit-prefixed
        navigator.webkitGetUserMedia(videoObj, function(stream) {
            video.src = window.webkitURL ? window.webkitURL.createObjectURL(stream) : stream;
            video.play();
            setTimeout(function () { onTick(context, video); }, 0);
        }, errBack);
    }
    else if(navigator.mozGetUserMedia) { // Firefox-prefixed
        navigator.mozGetUserMedia(videoObj, function(stream) {
            video.src = window.URL ? window.URL.createObjectURL(stream) : stream;
            video.play();
            setTimeout(function () { onTick(context, video); }, 0);
        }, errBack);
    }
});
  </script>
</body>
